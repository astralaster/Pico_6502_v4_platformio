.program clock
    pull block
    out y, 32
.wrap_target
    mov x, y
    set pins,1[2] ; CLOCK HIGH
    irq 0    ; CLOCK HIGH, Notify Address SM
    wait 1 irq 1
lp1:
    jmp x-- lp1   ; Delay for (x + 1) cycles, x is a 32 bit number
    mov x, y
    irq 2
    wait 1 irq 3
    set pins,0[2] ; CLOCK LOW
lp2:
    jmp x-- lp2   ; Delay for the same number of cycles again
.wrap

% c-sdk {
// this is a raw helper function for use by the user which sets up the GPIO output, and configures the SM to output on a particular pin

void clock_program_init(PIO pio, uint sm, uint offset, uint pin) {
   pio_gpio_init(pio, pin);
   pio_sm_set_consecutive_pindirs(pio, sm, pin, 1, true);
   pio_sm_config c = clock_program_get_default_config(offset);
   sm_config_set_set_pins(&c, pin, 1);
   pio_sm_init(pio, sm, offset, &c);
}
%}